<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <aop:aspectj-autoproxy />
    <context:component-scan base-package="${basePackage}" />
	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <property name="initialSize" value="${pool.initialSize}" />
        <property name="maxActive" value="${pool.maxActive}" />
        <property name="maxIdle" value="${pool.maxIdle}" />
        <property name="minIdle" value="${pool.minIdle}" />
        <property name="maxWait" value="${pool.maxWait}" />
        <property name="poolPreparedStatements" value="${pool.poolPreparedStatements}" />
        <property name="defaultAutoCommit" value="${pool.defaultAutoCommit}" />
    </bean>

    <bean id="dataSourceForLog" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.forlog.driver}" />
        <property name="url" value="${db.forlog.url}" />
        <property name="username" value="${db.forlog.username}" />
        <property name="password" value="${db.forlog.password}" />

        <property name="initialSize" value="${pool.forlog.initialSize}" />
        <property name="maxActive" value="${pool.forlog.maxActive}" />
        <property name="maxIdle" value="${pool.forlog.maxIdle}" />
        <property name="minIdle" value="${pool.forlog.minIdle}" />
        <property name="maxWait" value="${pool.forlog.maxWait}" />
        <property name="poolPreparedStatements" value="${pool.forlog.poolPreparedStatements}" />
        <property name="defaultAutoCommit" value="${pool.forlog.defaultAutoCommit}" />
    </bean>
        <!-- 用p6spy 在console显示变量绑定后的真实sql 与ResultSet,方便开发 
    <bean id="dataSourceSpy" class="com.p6spy.engine.spy.P6DataSource">
        <constructor-arg index="0" ref="dataSource"/>
    </bean>
    <bean id="dataSourceForLogSpy" class="com.p6spy.engine.spy.P6DataSource">
        <constructor-arg index="0" ref="dataSourceForLog"/>
    </bean>
    -->

    <bean id="entityManagerFactory" class="org.apdplat.platform.spring.APDPlatLocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:org/apdplat/jpa2.xml" />
        <property name="dataSource" ref="${dataSource}" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${jpa.database}" />
                <property name="showSql" value="${jpa.show_sql}" />
                <property name="generateDdl" value="${jpa.generateDdl}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.memcached.servers">${hibernate.memcached.servers}</prop>
            </props>
        </property>
    </bean>

    <bean id="entityManagerFactoryForLog" class="org.apdplat.platform.spring.APDPlatLocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:org/apdplat/jpa2_for_log.xml" />
        <property name="dataSource" ref="${dataSourceForLog}" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${jpa.forlog.database}" />
                <property name="showSql" value="${jpa.forlog.show_sql}" />
                <property name="generateDdl" value="${jpa.forlog.generateDdl}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.format_sql">${hibernate.forlog.format_sql}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.forlog.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.forlog.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.forlog.jdbc.batch_size}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.forlog.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_structured_entries">${hibernate.forlog.cache.use_structured_entries}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.forlog.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.forlog.cache.provider_class}</prop>
                <prop key="hibernate.memcached.servers">${hibernate.forlog.memcached.servers}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="transactionManagerForLog" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryForLog" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <tx:annotation-driven transaction-manager="transactionManagerForLog" />

	<!-- Spring属性文件解密组件  -->
    <bean id="propertyConfigurer" class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
        <constructor-arg ref="configurationEncryptor" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <value>classpath:/org/apdplat/config.properties</value>
                <value>classpath:config.local.properties</value>
                <value>classpath:/org/apdplat/db.properties</value>
                <value>classpath:db.local.properties</value>
            </list>
        </property>
    </bean>

    <bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config" ref="environmentVariablesConfiguration" />
    </bean>

    <bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
        <property name="algorithm" value="PBEWithMD5AndDES" />
        <property name="password" value="config" />
    </bean>
         <!-- 引用ehCache的配置 -->
    <bean id="defaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
    </bean>

         <!-- 定义ehCache的工厂，并设置所使用的Cache name -->
    <bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref local="defaultCacheManager"/>
        </property>
        <property name="cacheName">
            <value>DEFAULT_CACHE</value>
        </property>
    </bean>

    <!--定义定时执行 backupServiceExecuter 这个bean中的backup()方法-->
    <bean id="backupTask"    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="backupServiceExecuter" />
        </property>
        <property name="targetMethod">
            <value>backup</value>
        </property>
    </bean>
        
    <bean id="serviceFacadeForLog" class="org.apdplat.platform.service.ServiceFacade">
        <property name="dao" ref="daoFacadeForLog"/>
    </bean>
    
    <bean id="daoFacadeForLog" class="org.apdplat.platform.dao.DaoFacade">
        <constructor-arg>
            <value type="org.apdplat.platform.dao.MultiDatabase">APDPlatForLog</value>
        </constructor-arg>
    </bean>
</beans>